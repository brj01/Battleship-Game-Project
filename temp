void easyBotFire(Bot *bot, Player *opponent) {
    int row, col;
    do {
        row = rand() % SIZE;
        col = rand() % SIZE;
    } while (opponent->hits[row][col]);
    char result[20];
    fire(opponent, row, col, result);
    printf("Bot fires at %c%d: %s\n", 'A' + col, row + 1, result);
}

void mediumBotFire(Bot *bot, Player *opponent) {
    int row, col;
    if (bot->lastHitSuccess) {
        if (bot->lastHitRow > 0 && !opponent->hits[bot->lastHitRow - 1][bot->lastHitCol]) {
            row = bot->lastHitRow - 1;
            col = bot->lastHitCol;
        } else if (bot->lastHitRow < SIZE - 1 && !opponent->hits[bot->lastHitRow + 1][bot->lastHitCol]) {
            row = bot->lastHitRow + 1;
            col = bot->lastHitCol;
        } else if (bot->lastHitCol > 0 && !opponent->hits[bot->lastHitRow][bot->lastHitCol - 1]) {
            row = bot->lastHitRow;
            col = bot->lastHitCol - 1;
        } else if (bot->lastHitCol < SIZE - 1 && !opponent->hits[bot->lastHitRow][bot->lastHitCol + 1]) {
            row = bot->lastHitRow;
            col = bot->lastHitCol + 1;
        } else {
            do {
                row = rand() % SIZE;
                col = rand() % SIZE;
            } while (opponent->hits[row][col]);
        }
    } else {
        do {
            row = rand() % SIZE;
            col = rand() % SIZE;
        } while (opponent->hits[row][col]);
    }
    char result[20];
    bot->lastHitSuccess = fire(opponent, row, col, result);
    bot->lastHitRow = row;
    bot->lastHitCol = col;
    printf("Bot fires at %c%d: %s\n", 'A' + col, row + 1, result);
}

void hardBotFire(Bot *bot, Player *opponent) {
    int row, col;
    if (bot->torpedoAvailable) {
        printf("Bot uses torpedo!\n");
        int leastHits = SIZE;
        int targetIndex = 0;
        char direction[10];
        for (int i = 0; i < SIZE; i++) {
            int rowHits = 0, colHits = 0;
            for (int j = 0; j < SIZE; j++) {
                if (opponent->hits[i][j]) rowHits++;
                if (opponent->hits[j][i]) colHits++;
            }
            if (rowHits < leastHits) {
                leastHits = rowHits;
                targetIndex = i;
                strcpy(direction, "row");
            }
            if (colHits < leastHits) {
                leastHits = colHits;
                targetIndex = i;
                strcpy(direction, "column");
            }
        }
        torpedo(opponent, direction, targetIndex);
        bot->torpedoAvailable = 0;
    } else if (bot->lastHitSuccess) {
        mediumBotFire(bot, opponent);
    } else {
        do {
            row = rand() % SIZE;
            col = rand() % SIZE;
        } while (opponent->hits[row][col]);
        char result[20];
        fire(opponent, row, col, result);
        printf("Bot fires at %c%d: %s\n", 'A' + col, row + 1, result);
    }
}